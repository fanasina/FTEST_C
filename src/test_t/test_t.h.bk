#ifndef __TEST_C_H__
#define __TEST_C_H__

#include <stdio.h>
#include <stdlib.h>

#include "src/tools_t/tools_t.h"

#define SIZE_OK 7

/*
size_t COUNT_OK = 0;
size_t COUNT_KO = 0;
size_t COUNT_TEST = 0;
*/

struct function_list{
  char * name_function;
  void(*function_top)(void); 
  struct function_list * next;
};
typedef struct function_list function_list;

void clear_fonction_list(function_list **f_l);
void append_function_list(void(*f)(void), char *name_function);
void execute_all_function_list();
void run_all_tests();
void initiation_test();



#define TEST(name_f)                                        \
  void test_##name_f(void);                                 \
  void append_test_##name_f(void){                          \
    append_function_list(test_##name_f,#name_f);            \
  }                                                         \
  struct STRUCT_##name_f{                                   \
    void (*append)(void);                                   \
  } instance_struct_test_##name_f = {append_test_##name_f}; \
void test_##name_f(void)





void print_OK();
void print_KO();
void print_OK_with_msg(char* msg);
void print_KO_with_msg(char *msg);
void print_OK_with_msg_endl(char* msg);
void print_KO_with_msg_endl(char *msg);



#endif /* __TEST_C_H__ */
